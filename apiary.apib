FORMAT: 1A
HOST: http://giggles.ch

# Childcare API introduction

Childcare application API calls.

# Data Structures

## Report Base (object)

+ food (array[Meal]) child ate

## Report Extended (Report Base)

+ day: 20160226 (string, required) - Day of report
+ mood: Happy (string) - Child mood
+ sleep (array[Sleep]) - Sleep times
+ nappy (Nappy) - Nappy changes
+ milestones (optional, array[string]) - Array of Milestone descriptions
+ id: 1 (number, required) - ID of the report
+ child_id: 4 (number, required) - ID of the child
+ user_id: 3 (number, required) - ID of the staff
+ published (boolean, required) - says whether it's a published or a draft

## Group

+ name: Honey bees (string, required) - Name of the group
+ id: 38 (number, required) - ID of the group
+ children (array[Child]) - Children in the group

## Child
    
+ name: Kathy (string, required) - Name of the child
+ id: 4 (number, required) - ID of the child
+ photo: http://images3.wikia.nocookie.net/__cb20120819074606/secretlife/images/8/80/Kathy123.jpg (string, required) - Photo URL
+ age: 7 (number, required) - Age of the child

## Sleep

+ start_time: 11:30 (string, required) - Start time of the nap
+ end_time: 12:00 (string, required) - End time of the nap

## Meal

+ name: Botifarra de pages (string, required) - Name of the dish
+ amount: 2 (number, required) - Amount of servings
+ unit: portions (string, required) - Type of serving (portion, slice, etc.)
+ time: lunch (string, required) - When it was served

## Nappy

+ nappies: 3 (number, required) - Number of nappy changes
+ poos : 2 (number, required) - Number of poos
+ notes: Some poo notes, every parent loves those. (string, required) - Poo notes


# Group Authentication

## Sign In [/api/v1.0/sign_in/]

### Sign in [POST]

Performs the login (Based on the documentation here: https://github.com/timdorr/model-s-api/blob/master/apiary.apib)

Returns an `access_token` which is passed along as a header with all future requests to authenticate the user.

You must provide the `Authorization: Bearer {access_token}` header in all other requests.

+ Request (application/json)

        {
            "email": "some-user-email@ddress",
            "password": "a-password",
            "source": "iphone"
        }

+ Response 200 (application/json)
    + Body

            {
                "access_token":"abc123",
                "token_type":"bearer",
                "expires_in":7776000,
                "avatar": "http://images.clipartpanda.com/woman-clip-art-royalty-free-woman-clipart-illustration-92299.jpg",
                "children":[
                    {"name":"Kathy","id":4,"photo":"http://images3.wikia.nocookie.net/__cb20120819074606/secretlife/images/8/80/Kathy123.jpg","age": 7},
                    {"name":"Betty","id":5,"photo":"http://barbieplanet.ru/wp-content/uploads/2011/03/betty-teen-original2.jpg","age": 6}
                ],
                "group":{
                    "name":"Honey bees",
                    "id":38,
                    "children": [
                        {"name":"Kathy","id":4,"photo":"http://images3.wikia.nocookie.net/__cb20120819074606/secretlife/images/8/80/Kathy123.jpg","age": 7},
                        {"name":"Betty","id":5,"photo":"http://barbieplanet.ru/wp-content/uploads/2011/03/betty-teen-original2.jpg","age": 6}
                    ]
                }
            }


## Sign out [/api/v1.0/sign_out]

### Sign out [DELETE]

+ Request
    + Headers

            Authorization: Bearer {access_token}


+ Response 204

## Forgot Password [/api/v1.0/forgot_password/]

### Forgot password [POST]

This API call is used to notify that the user with this {email} has
fogotten their password.

+ Request (application/json)

        {
            "email": "user-email@ddress",
        }


+ Response 200 (application/json)
    + Body
            
            {
              "status": "ok"
            }

# Group Reports

## Report [/api/v1.0/reports/date/{date}/child/{child_id}]

Resource representing one child report.

+ Parameters
    + child_id:  4 (number, required) - child id for the report
    + date: 20150324 (string, required) - date of the report to get

+ Attributes (Report Extended)

### Retrieve [GET]

Retrieve a report for a particular date and child ID

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Body
    
            {
                "id":1,
                "child_id":4,
                "user_id":3,
                "day":"20160226",
                "mood":"Happy",
                "food":[
                    {"name":"Fresh banana","amount":2,"unit":"portions","time":"morning"},
                    {"name":"Botifarra de pages","amount":2,"unit":"portions","time":"lunch"},
                    {"name":"Apple","amount":2,"unit":"portions","time":"afternoon"}
                ],
                "sleep":[{"start_time":"11:30","end_time":"12:00"}],
                "nappy":{"nappies":3,"poos":2,"notes":"Some poo notes, every parent loves those."},
                "milestones":["I said my first word today: Mama"],
                "published": true
            }

### Update [PUT]

Update data of a particular report 

+ Attributes (Report Base)

+ Request (application/json)

+ Response 204 (application/json)


## Reports by date [/api/v1.0/reports/date/{date}]

Resource representing an array of reports.

+ Parameters
    + date: 20150324 (string, required) - date of the report to get
    
+ Attributes (array[Report Extended])


### Retrieve [GET]

Retrieve an array of reports for a particular date

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id":1,
                    "child_id":4,
                    "user_id":3,
                    "day":"20160226",
                    "mood":"Happy",
                    "food":[
                        {"name":"Fresh banana","amount":2,"unit":"portions","time":"morning"},
                        {"name":"Botifarra de pages","amount":2,"unit":"portions","time":"lunch"},
                        {"name":"Apple","amount":2,"unit":"portions","time":"afternoon"}
                    ],
                    "sleep":[{"start_time":"11:30","end_time":"12:00"}],
                    "nappy":{"nappies":3,"poos":2,"notes":"Some poo notes, every parent loves those."},
                    "milestones":["I said my first word today: Mama"],
                    "published": true
                },
                {
                    "id":1,
                    "child_id":5,
                    "user_id":3,
                    "day":"20160226",
                    "mood":"Sad",
                    "food":[
                        {"name":"Fresh banana","amount":1,"unit":"portions","time":"morning"},
                        {"name":"Botifarra de pages","amount":1,"unit":"portions","time":"lunch"},
                        {"name":"Apple","amount":5,"unit":"portions","time":"afternoon"}
                    ],
                    "sleep":[{"start_time":"11:30","end_time":"12:30"}],
                    "nappy":{"nappies":2,"poos":1,"notes":"Basic poo note."},
                    "milestones":["I said my first word today: Mama"],
                    "published": false
                }
            ]

### Update [POST]

Mass create reports for a particular day optionally seeded with Food data.

+ Attributes (Report Base)

+ Request (application/json)

+ Response 204 (application/json)



## Reports by child [/api/v1.0/reports/child_id/{child_id}{?limit}{?offset}]

Resource representing an array of reports for a particular child.

+ Parameters
    + child_id: 3 (number, required) - Child ID to get the reports for
    + limit: 10 (number, optional) - Limit of reports returned
    + offset: 10 (number, optional) - Offset of records (we assume sorted by date descending)
    
+ Attributes (array[Report Extended])

### Retrieve [GET]

Retrieve an array of reports for a particular child

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "id":1,
                    "child_id":4,
                    "user_id":3,
                    "day":"20160226",
                    "mood":"Happy",
                    "food":[
                        {"name":"Fresh banana","amount":2,"unit":"portions","time":"morning"},
                        {"name":"Botifarra de pages","amount":2,"unit":"portions","time":"lunch"},
                        {"name":"Apple","amount":2,"unit":"portions","time":"afternoon"}
                    ],
                    "sleep":[{"start_time":"11:30","end_time":"12:00"}],
                    "nappy":{"nappies":3,"poos":2,"notes":"Some poo notes, every parent loves those."},
                    "milestones":["I said my first word today: Mama"],
                    "published": true
                },
                {
                    "id":1,
                    "child_id":4,
                    "user_id":3,
                    "day":"20160225",
                    "mood":"Sad",
                    "food":[
                        {"name":"Fresh banana","amount":1,"unit":"portions","time":"morning"},
                        {"name":"Botifarra de pages","amount":1,"unit":"portions","time":"lunch"},
                        {"name":"Apple","amount":5,"unit":"portions","time":"afternoon"}
                    ],
                    "sleep":[{"start_time":"11:30","end_time":"12:30"}],
                    "nappy":{"nappies":2,"poos":1,"notes":"Basic poo note."},
                    "milestones":["I said my first word today: Mama"],
                    "published": false
                }
            ]


# Group Posts

## Posts [/api/v1.0/child/{child_id}/posts]

Resource representing all posts for a child

+ Parameters
    + child_id: 14 - (number, required) - ID for the child
    
+ Attributes (array[Post])

#### List all posts for child [GET]

Retrieves all posts for a child

+ Parameters
    + child_id: 23 - (number, required) - ID for the child

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)

    + Attributes (Posts)

### Post [/api/v1.0/child/{child_id}/posts/{post_id}]

Resource representing a post.

+ Parameters
    + child_id: 3 - (number, required) - ID for the child
    + post_id: 14 - (number, required) - ID for the post

+ Attributes
    + id: 34 - (number, required) - ID for the post
    + child_id: 5 - (number, required) - ID for the child
    + user_id: 33 - (number, required) - ID for the user
    + post_text: This is a post - (string, required) - Post text
    + media_url: http://test.com/resource/id - (string, optional) - URL for media
    + created_at: 20151023114534 - (string, required) - Datetime created

#### Retrieve post [GET]

Retrieves an individual post.

+ Request
    + Headers
    
            Authorization: Bearer {access_token}
            
+ Response 200 (application/json)
    + Attributes (Post)

#### Update own post [PUT]

Updates own post.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {access_token}
    
    + Attributes (Post)

+ Response 204 (application/json)

    Post updated
    
    + Attributes (Post)

#### Create a new post [POST]

Adds a new post.

+ Request (application/json)
    + Headers

            Authorization: Bearer {access_token}
            
    + Attributes (Post)
    
+ Response 201 (application/json)

    Post created.
    
    + Attributes (Post)

#### Delete my post [DELETE]

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 204

### Comments [/api/v1.0/child/{child_id}/posts/{post_id}/comments]

Resource representing all comments for a post

+ Parameters
    + child_id: 33 - (number, required) - ID for the child
    + post_id: 12 - (number, required) - ID for the post

+ Attributes (array[Comment])

#### List all comments for a post [GET]

Retrieves all comments for a post

+ Parameters
    + child_id: 41 - (number, required) - ID for the child
    + post_id: 111 - (number, required) - ID for the post

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)

    + Attributes (Comments)

### Comment [/api/v1.0/child/{child_id}/posts/{post_id}/comments/{comment_id}]

Resource representing a post comment.

+ Parameters
    + child_id: 5 - (number, required) - ID for the child
    + post_id: 2 - (number, required) - ID for the post
    + comment_id: 13 - (number, required) - ID for the comment

+ Attributes
    + id: 123 - (number, required) - ID for the comment
    + post_id: 45 - (number, required) - ID for the post
    + user_id: 33 - (number, required) - ID for the user
    + text: This is a message - (string, required) - message text
    + created_at: 20160215102334 - (string, required) - message created date

#### Retrieve comment [GET]

Retrieves an individual comment.

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Comment)

#### Update own comment [PUT]

Updates own comment.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {access_token}
    
    + Attributes (Comment)
    
+ Response 204 (application/json)

    Comment updated
    
    + Attributes (Comment)

#### Add new comment [POST]

Adds a new comment.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {access_token}
    
    + Attributes (Comment)

+ Response 201 (application/json)

    Comment created.
    
    + Attributes (Comment)

#### Delete my comment [DELETE]

+ Request
    + Headers
    
            Authorization: Bearer {access_token}
            
+ Response 204

### Post Likes [/api/v1.0/child/{child_id}/posts/{post_id}/likes]

Resource representing all likes for a post

+ Parameters
    + child_id: 15 - (number, required) - ID for the child
    + post_id: 4 - (number, required) - ID for the post

+ Attributes (array[Post Like])

#### List all likes for a post [GET]

Retrieves all likes for a post

+ Parameters
    + child_id: 41 - (number, required) - ID for the child
    + post_id: 111 - (number, required) - ID for the post

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)

    + Attributes (Post Likes)

### Post Like [/api/v1.0/child/{child_id}/posts/{post_id}/likes/{like_id}]

Resource representing a post like.

+ Parameters
    + child_id: 6 - (number, required) - ID for the child
    + post_id: 55 - (number, required) - ID for the post
    + like_id: 22 - (number, required) - ID for the like

+ Attributes
    + id: 43 - (number, required) - ID for the like
    + post_id: 33 - (number, required) - ID for the post
    + user_id: 11 - (number, required) - ID for the user
    + created_at: 20151110083456 - (string, required) - like created datetime

#### Like a post [POST]

Likes a post.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {access_token}
    
    + Attributes (Post Like)

+ Response 201 (application/json)

    Comment created.
    
    + Attributes (Post Like)

#### Unlike a post [DELETE]

Unlikes a post.

+ Request
    + Headers
    
            Authorization: Bearer {access_token}
            
+ Response 204

### Comment Likes [/api/v1.0/child/{child_id}/posts/{post_id}/comments/{comment_id}/likes]

Resource representing all likes for a comment

+ Parameters
    + child_id: 55 - (number, required) - ID for the child
    + post_id: 114 - (number, required) - ID for the post
    + comment_id: 1 - (number, required) - ID for the post

+ Attributes (array[Comment Like])

#### List all likes for a comment [GET]

Retrieves all likes for a comment

+ Parameters
    + child_id: 41 - (number, required) - ID for the child
    + post_id: 111 - (number, required) - ID for the post
    + comment_id: 33 - (number, required) - ID for the comment

+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)

    + Attributes (Comment Likes)

### Comment Like [/api/v1.0/child/{child_id}/posts/{post_id}/comments/{comment_id}/likes/{like_id}]

Resource representing a comment like.

+ Parameters
    + child_id: 6 - (number, required) - ID for the child
    + post_id: 55 - (number, required) - ID for the post
    + comment_id: 87 - (number, required) - ID for the comment
    + like_id: 22 - (number, required) - ID for the like

+ Attributes
    + id: 43 - (number, required) - ID for the like
    + post_id: 33 - (number, required) - ID for the post
    + comment_id: 44 - (number, required) - ID for the comment
    + user_id: 11 - (number, required) - ID for the user
    + created_at: 20151110083456 - (string, required) - like created datetime

#### Like a comment [POST]

Likes a comment.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {access_token}
    
    + Attributes (Comment Like)

+ Response 201 (application/json)

    Comment like created.
    
    + Attributes (Comment Like)

#### Unlike a comment [DELETE]

Unlikes a comment.

+ Request
    + Headers
    
            Authorization: Bearer {access_token}
            
+ Response 204

### User [/api/v1.0/users/{user_id}]

Resource representing user

+ Parameters
    + user_id: 13 - (number, required) - The ID of the user

+ Attributes
    + id: 344 - (number, required) - The ID of the user
    + first_name - John - (string, required) - The first name for the user
    + last_name - Smith - (string, required) - The last name for the user
    + user_type - Staff - (enum, required) - The type of the user

### Users [/api/v1.0/users]

Resource representing all users

+ Attributes (array[User])

### Search Users [/api/v1.0/search/users/{user_name}]

Search users

+ Parameters

    + user_name: Anna' - (string, required) - The user name to search for.

+ Attributes (array[User])

#### List all user search results [GET]

List users

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    
    + Attributes(Users)

### Search Posts [/api/v1.0/search/child_id/{child_id}/posts/{post_keyword}]

Search posts

+ Parameters

    + child_id: 1 - (number, required) - The ID for the child.
    + post_keyword: sick - (string, required) - The keyword for posts to search.

#### List all posts search results [GET]

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    
    + Attributes (Posts)

### Search Reports [/api/v1.0/search/{child_id}/reports/{report_date}]

Search reports for specific date

+ Parameters
    + child_id: 11 - (number, required) - ID for the child
    + report_date: 20160202 - (string, required) - Date for specific report

#### Find date report [GET]

Find report for a specific date

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)

    + Attributes (Report)

+ Response 404 (application/json)

        Not found

## General Settings [/api/v1.0/settings/{id}/general_settings]

+ Parameters

    + id: `1` (number) - The id of the user.

#### List general settings [GET]

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    
    + Body
    
            {
                "language": "German",
                "push_notification": true
            }

## Language Settings [/api/v1.0/settings/{id}/language_setting]

+ Parameters

    + id: `1` (number) - The id of the user.

#### List language setting [GET]

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    
    + Body
    
            {
                "language": "German"
            }

#### Modify language setting [PUT]
 Request
    + Headers

            Authorization: Bearer {access_token}
    
    + Attributes (language_setting)

+ Response 204

## Push Notification Settings [/api/v1.0/settings/{id}/push_notification_setting]

+ Parameters

    + id: `1` (number) - The id of the user.

#### List push notification setting [GET]

+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    
    + Body
    
            {
                "push_notifications": true
            }

#### Modify push notification setting [PUT]
Request
    + Headers

            Authorization: Bearer {access_token}
    
    + Attributes (push_notification_setting)

+ Response 204